<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Vectors</h1>
                </header>
            
            <article>
                
<p>While arrays are simple to use, they have a single big disadvantage: they cannot be resized. The vector (<kbd>Vec</kbd>) acts in a way similar to a <kbd>List</kbd> in C#. It is also a generic type, as <kbd>Vec</kbd> itself is actually <kbd>Vec&lt;T&gt;</kbd>.</p>
<p>The <kbd>Vec</kbd> type is found in the standard library (<kbd>std::vec</kbd>).</p>
<p>To create a vector, we use something akin to either of the following:</p>
<pre>let mut my_vector: Vec&lt;f32&gt; = Vec::new(); // explicit definition </pre>
<p>Or this:</p>
<pre>let mut my_alt_vector = vec![4f32, 3.14, 6.28, 13.54, 27.08]; </pre>
<p>The <kbd>f32</kbd> within the <kbd>Vec</kbd> macro tells the compiler that the type for the vector is <kbd>f32</kbd>. The <kbd>f32</kbd> can be omitted, as the compiler can determine the type for the vector.</p>


            </article>

            
        </section>
    </div></body>
</html>