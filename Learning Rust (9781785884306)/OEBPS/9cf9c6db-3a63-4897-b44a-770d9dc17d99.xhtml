<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Introducing our simple library</h1>
                </header>
            
            <article>
                
<p>Libraries come in three flavors: <kbd>.dll</kbd> (dynamic linkable library) for Windows, <kbd>.so</kbd> (shared object), and <kbd>.a</kbd>—<kbd>.a</kbd> and <kbd>.so</kbd> are typically found on Unix type systems (including macOS).</p>
<p>Our library is very simple; it acts as a calculation library—you pass in the values to the correct function and the result is returned. Not rocket science but enough to prove what we're going to do.</p>
<div class="packt_infobox">When using external libraries, we will need to use the<span> </span><kbd>unsafe</kbd><span> </span>directive. Rust cannot control what an external library delivers and therefore if we used standard code, the compiler will not allow compilation.<br/>
<br/>
<span>As developers, using external libraries must be handled with care.</span></div>


            </article>

            
        </section>
    </div></body>
</html>