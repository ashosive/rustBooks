<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Can we make things safer?</h1>
                </header>
            
            <article>
                
<p>There is a strategy that we can take to try and make things slightly safer.</p>
<p>Consider our original <kbd>extern</kbd> code:</p>
<pre>[link(name="mathlib")] 
extern 
 { 
     fn add_two_int_numbers(a: i32, b: i32) -&gt; i32; 
} </pre>
<p>This code is calling a raw C API and, as discussed, any calls to this have to be marked as being <kbd>unsafe</kbd>. It is unsafe as the call is known as being <strong>low level</strong>.</p>
<p>In terms of programming languages, the lower the language, the closer it is to being a language understood by the processor (an assembler is considered the lowest language that is of any real use, short of poking raw binary into a memory location). Here we are exposing the library at its lowest level.</p>
<p>In order to make the call safer, we use something known as <strong>wrapping</strong>.</p>


            </article>

            
        </section>
    </div></body>
</html>