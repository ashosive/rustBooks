<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Creating top-level modules</h1>
                </header>
            
            <article>
                
<p>To create a module, we first need to tell the compiler that the code is held in a module. In this example, I will use the <kbd>Trigonometry</kbd> module:</p>
<pre>mod Trigonometry // top level module 
{ 
    mod Natural  // sub module 
    { 
         
    } 
     
    mod Arc      // sub module 
    { 
         
    } 
} </pre>
<p>When we compile this using <kbd>cargo build</kbd> (not <kbd>cargo run</kbd>; there is no <kbd>main</kbd> function within the library) and examine the tree, we'll see the library (highlighted):</p>
<div class="CDPAlignCenter CDPAlign"><img height="246" width="379" class=" image-border" src="Images/b7ad8e66-82c3-4b41-98b1-81e9d2aa9d26.png"/></div>
<div class="packt_figref CDPAlignCenter CDPAlign">Figure 2</div>
<div class="packt_infobox"><span>The structure for this section can be found inÂ </span><kbd>Chapter10/MathsLibStucture</kbd>.</div>
<p>We can't do very much with it currently as all it contains are placeholders that do very little. Before this goes any further, have a look at the <kbd>lib.rs</kbd> source file. With nothing in except for the module names, it hits 62 lines. Let's think of a very simple example for the <kbd>Conversion</kbd> module, <em>fahrenheit_to_celcius</em>.</p>
<p>The formula to do this is <em>(F - 32) * 5/9</em>. Our function will therefore be the following:</p>
<pre>pub fn fahrenheit_to_celcius(a: f32) -&gt; f32 
{ 
    (a - 32f32) * 5f32 / 9f32 
} </pre>
<p>That was just four lines of code. We also need ones to go from C to F, K to C, C to K, F to K, and K to F (K is Kelvin, which denotes absolute temperature, that is, 0K = -273.15<sup>o</sup>C , also known as absolute zero). Including these will take it to a total of around 24 lines of code. This is a simple module. The ones for regression analysis run to around 100.</p>
<p>Our source file is going to be huge. As we want to keep our modules manageable, we are going to need to break the <kbd>lib.rs</kbd> file down a bit.</p>


            </article>

            
        </section>
    </div></body>
</html>