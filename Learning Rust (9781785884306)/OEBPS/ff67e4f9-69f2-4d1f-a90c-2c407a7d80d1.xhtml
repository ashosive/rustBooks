<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Bitwise rotation</h1>
                </header>
            
            <article>
                
<p>Bitwise rotation is performed in Rust using the <kbd>&lt;&lt;</kbd> and <kbd>&gt;&gt;</kbd> operators.</p>
<p>For example, if we have a variable called <kbd>x</kbd> that is rotated 3 to the left, we will write <kbd>x &lt;&lt; 3</kbd> with 3 to the right being <kbd>x &gt;&gt; 3</kbd>.</p>
<p>Say we have <em>x = 01101001</em>, <kbd>x &lt;&lt; 3</kbd> will be 01001000 and <kbd>x &gt;&gt; 3</kbd> will be 00001101.</p>


            </article>

            
        </section>
    </div></body>
</html>