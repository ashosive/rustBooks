<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Creating a binding within a match pattern</h1>
                </header>
            
            <article>
                
<p>Sometimes, it is very useful to create a temporary variable within a <kbd>match</kbd> construct and bind the result of the pattern to it. This is performed using <kbd>@</kbd>, as follows:</p>
<pre>match test 
{ 
    e @ 1 ... 10 =&gt; println!("the value is {}", e), 
    _ =&gt; println!("nothing doing") 
} </pre>
<p>This attempts to match the pattern <kbd>1</kbd> to <kbd>10</kbd> to the value of <kbd>test</kbd>. If it is a match, the value is bound to <kbd>t</kbd>, which we can then manipulate as we would any other variable.</p>
<p>We can also bind to the variable with a fall through construct as done in the following example:</p>
<pre>match test 
{ 
    t @ 1 ... 5 | t @ 10 ... 15 =&gt; println!("our value for t = {}", t), 
    _ =&gt; println!("dunno!") 
} </pre>


            </article>

            
        </section>
    </div></body>
</html>