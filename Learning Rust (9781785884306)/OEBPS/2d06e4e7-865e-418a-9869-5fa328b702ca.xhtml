<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">The two questions you should be asking</h1>
                </header>
            
            <article>
                
<p>The code is a bit of head-scratcher. Surely we should have been able to use something similar to the following code?</p>
<pre>let value = MyFirstEnum::TupleType(3.14, 1, "Hello".to_owned()); </pre>
<p>And then use <kbd>value.2</kbd> to obtain the string part directly within the <kbd>println!</kbd> statement, instead of the <kbd>if let</kbd> construct?</p>
<p>The reason why we can't is that <kbd>enum</kbd> variants aren't their own type, so as soon as we create the preceding value, above it is immediately lost.</p>
<p>The second question should be: What is the <kbd>if let</kbd> construct?</p>
<p>In Rust, <kbd>if let</kbd> is used as a way to perform certain types of pattern-matching.</p>


            </article>

            
        </section>
    </div></body>
</html>