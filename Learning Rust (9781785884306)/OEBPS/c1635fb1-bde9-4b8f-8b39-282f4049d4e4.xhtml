<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Float</h1>
                </header>
            
            <article>
                
<p>Much as with other languages, floating point arithmetic can be performed in Rust. As with an integer variable, a floating point variable is defined for a 32-bit <kbd>float</kbd> as follows:</p>
<pre>let pi = 3.14f32; </pre>
<p>For a 64-bit <kbd>float</kbd>, it will be defined as this:</p>
<pre>let pi = 3.14f64; </pre>
<p>The variables are literal values. Another way to declare the size would be via types:</p>
<pre>let pi: f32 = 3.14; </pre>
<div class="packt_infobox">If a type is omitted (for example, let <kbd>x</kbd> = <kbd>3.14</kbd>), the variable will be declared as a 64-bit floating point variable.</div>


            </article>

            
        </section>
    </div></body>
</html>