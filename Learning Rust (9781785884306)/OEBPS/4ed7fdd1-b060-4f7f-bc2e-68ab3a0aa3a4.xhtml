<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Input and output</h1>
                </header>
            
            <article>
                
<p>The following code snippet is an example of a function with both input and output lifetimes:</p>
<pre>fn inandout&lt;'a&gt;(inp: &amp;'a str) -&gt; &amp;'a str {...} </pre>
<p>We can conclude the following from the preceding code snippet:</p>
<ul>
<li>Each lifetime in the function argument becomes a distinct lifetime parameter</li>
<li>If there is one input lifetime, the lifetime is assigned to all lifetimes in the return value</li>
</ul>
<p>There is another concept that we will need to include: if there are multiple input lifetimes and one of them points to <kbd>&amp;self</kbd> (either mutable or immutable), the lifetime of self applies to all output lifetimes.</p>


            </article>

            
        </section>
    </div></body>
</html>