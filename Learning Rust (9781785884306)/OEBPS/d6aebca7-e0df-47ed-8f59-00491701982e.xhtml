<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Keeping your object safe</h1>
                </header>
            
            <article>
                
<p>We can't use all traits to create a trait object. Take the following:</p>
<pre class="mce-root">let my_vec = vec![1,3,5,7,9]; <br/>let dupe = &amp;my_vec as &amp;Clone;</pre>
<p>This will not compile as <kbd>Clone</kbd> is not object-safe as <kbd>Clone</kbd> contains <kbd>Self: Sized</kbd>, which a trait cannot have.</p>
<p>If the trait doesn't require <kbd>Self: Sized</kbd> and all of the methods are object-safe, it is an object-safe trait. For a method to be object-safe, it must require <kbd>Self: Sized</kbd>. If the method doesn't require <kbd>Self: Sized</kbd>, it can still be object-safe if the method doesn't require any parameters and doesn't use <kbd>Self</kbd>.</p>


            </article>

            
        </section>
    </div></body>
</html>