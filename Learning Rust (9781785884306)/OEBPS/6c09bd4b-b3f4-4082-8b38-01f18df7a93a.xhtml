<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Controlling the output formatting</h1>
                </header>
            
            <article>
                
<p>The <kbd>std::fmt</kbd> module provides the developer with a range of utilities for formatting and printing strings. Let's start with the <kbd>format!</kbd> macro. This macro returns a string.</p>
<p>We have seen that if we use <kbd>println!</kbd>(<kbd>Hello {}</kbd>, <kbd>myString</kbd>), the code will print the contents of <kbd>myString</kbd> after the <kbd>Hello</kbd>. The <kbd>format!</kbd> macro works pretty much the same, just that it returns the formatted string instead of outputting it. In fact, <kbd>println!</kbd> essentially uses <kbd>format!</kbd> itself under the hood.</p>


            </article>

            
        </section>
    </div></body>
</html>