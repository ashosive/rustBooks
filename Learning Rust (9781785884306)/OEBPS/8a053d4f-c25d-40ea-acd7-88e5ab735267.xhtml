<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Let's start at the beginning</h1>
                </header>
            
            <article>
                
<p>In <a href="d01e62f9-9349-4eaa-a63b-ab0e691c56cc.xhtml">Chapter 2</a><em>, Variables</em>, I briefly mentioned how data is stored within memory, and I said that non-compound types, such as <kbd>i32</kbd>, are stored on the stack, whereas, the likes of <kbd>String</kbd>, <kbd>Vector&lt;T&gt;</kbd>, types, and such are stored on the heap.</p>
<p>By default, Rust stores data on the stack, as it's incredibly fast. There are drawbacks though. The stack is limited in size and the allocation only lasts for the lifetime of the function.</p>
<p>The question is, how much memory does a function take?</p>


            </article>

            
        </section>
    </div></body>
</html>