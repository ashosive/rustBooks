<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Generics - a small aside</h1>
                </header>
            
            <article>
                
<p>Code reduction and simplification is always a good thing (well, mostly at least!). However, with generics, there is always a trade-off and it's not always apparent.</p>
<p>Let's consider the following piece of code:</p>
<pre class="mce-root">fn my_multiply&lt;T: Mul&lt;Output = T&gt;&gt;(a: T, b: T) -&gt; T { return a * b; }</pre>
<p>This returns a value of type <kbd>T</kbd> by multiplying two variables (of type <kbd>T</kbd>).</p>
<p>The question is: You can send a number of types into that function - how will the compiler know what to do if it doesn't know what type <kbd>T</kbd> is? The only safe way is to create a version of <kbd>my_multiply</kbd> for each possible type. Fortunately, the compiler does this automatically for you in a process called monomorphization.</p>


            </article>

            
        </section>
    </div></body>
</html>