<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">What happens if the types don't match?</h1>
                </header>
            
            <article>
                
<p>There is no guarantee that when you build a library on a 32-bit platform, an <kbd>int</kbd> will have the same <kbd>size_t</kbd> as an <kbd>int</kbd> on a 64-bit platform. They usually will, but there is no guarantee. A simple example is this:</p>
<pre>sizeof(char) == 1 
sizeof(short) &lt;= sizeof(int) &lt;= sizeof(long) &lt;= sizeof(long long) </pre>
<p>Therefore, a short can be the same size as a long! More usually, though, <kbd>int</kbd> will be the platform word size (32 bits on a 32-bit processor, 64 bits on a 64-bit processor).</p>
<p>Values for floats are stricter and comply with the IEEE 754Â standards.</p>
<p>There is not normally an issue if the Rust application is built on a 64-bit platform and the library is 32 bits. If it is the other way around, however,there is a chance that an overflow may occur. It is unlikely, but worth keeping in mind.</p>


            </article>

            
        </section>
    </div></body>
</html>