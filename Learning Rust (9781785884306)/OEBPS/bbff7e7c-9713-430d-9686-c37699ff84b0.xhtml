<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Using the format! macro</h1>
                </header>
            
            <article>
                
<p>The <kbd>format!</kbd> macro works in a way similar to string formatters in other languages:</p>
<pre>fn main() { 
    let home_team = "Liverpool"; 
    let result = " beat "; 
    let away_team = "Manchester United"; 
     
    let full_line = format!("{}{}{}", home_team, result, away_team); 
         
    println!("{}", full_line); 
} </pre>
<p>The <kbd>{}</kbd> in the format strings mark spots for the following parameters. The spots are filled in order, so <kbd>full_line</kbd> will be a concatenation of <kbd>home_team</kbd>, <kbd>result</kbd>, and <kbd>away_team</kbd>.</p>
<p>When the preceding code snippet is compiled and executed, you will see the following:</p>
<div class="packt_figure CDPAlignCenter CDPAlign"><img class=" image-border" src="Images/f1773081-0a8d-446c-8401-2c826a001180.png"/></div>


            </article>

            
        </section>
    </div></body>
</html>