<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Lifetime within an struct</h1>
                </header>
            
            <article>
                
<p>As seen in <span class="ChapterrefPACKT">Chapter 7</span>, <em>Structs</em>, within Rust have a special purpose and they can also take multiple types within them and can be extended as much as required with as many parameters as required. Let's consider the following piece of code as an example:</p>
<pre>struct MyStruct 
{ 
    a: i32, 
    b: f32, 
    c: bool, 
} </pre>
<p>The preceding code creates a <kbd>struct</kbd> called <kbd>MyStruct</kbd> with three properties called <kbd>a</kbd>, <kbd>b</kbd>, and <kbd>c</kbd>. When an instance of <kbd>mystruct</kbd> is called into scope, the elements within <kbd>struct</kbd> can be readily accessed. If we want <kbd>struct</kbd> to be able to take a lifetime variable, we will have to both explicitly ask <kbd>struct</kbd> to take that lifetime variable and then allocate it to an element, as shown in the following code:</p>
<pre>struct&lt;'a&gt; MyStruct 
{ 
    lifetimevar: &amp;'a f32, 
    nvar: i32, 
} </pre>
<p>With the lifetime variable in there, we can be assured that the structure cannot outlive the <kbd>f32</kbd> reference it was passed to.</p>


            </article>

            
        </section>
    </div></body>
</html>