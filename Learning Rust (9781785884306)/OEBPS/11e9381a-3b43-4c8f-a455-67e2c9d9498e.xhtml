<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Functions and methods in Rust</h1>
                </header>
            
            <article>
                
<p>When we look at C++ or C#, a method is a programming unit within a class that does a specific task. A method in Rust is a function attached to compound data structures, or structs. These methods have access to the data of the object using the self parameter. They are defined in an <kbd>impl</kbd> block, as shown in the following example (a fuller example is given in the source examples):</p>
<pre>struct Point { 
    x: f64, 
    y: f64 
} 
 
impl Point { 
    fn origin() -&gt; Point { 
        Point {x: 0.0, y: 0.0 } 
    } 
 
    fn new(my_x: f64, my_y: f64) -&gt; Point { 
        Point { x: my_x, y: my_y } 
    } 
} </pre>
<p>Here, we defined a struct, <kbd>Point</kbd>, for points in 2D space. Then, we defined two constructor methods for that struct: origin for making a new point in location <kbd>0</kbd>,<kbd>0</kbd> and another for making a new arbitrary point.</p>


            </article>

            
        </section>
    </div></body>
</html>