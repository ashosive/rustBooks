<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Specifying the argument types</h1>
                </header>
            
            <article>
                
<p>As with much of the string handling in the C family of languages, it is possible to create a string based on a format string (for example, <kbd>{0:##.###}</kbd> would give a formatted output of the form <span class="packt_screen">xy.abc</span>).</p>
<p>Similar things can be done in Rust, as follows:</p>
<pre>let my_number = format!("{:.3}", 3.1415927); </pre>
<p>In the format string, the colon says we're requesting formatting for the value. Dot and <kbd>3</kbd> says that we want the number formatted to three decimal points. The formatter rounds the value for us, so the output will be <span class="packt_screen">3.142.</span></p>


            </article>

            
        </section>
    </div></body>
</html>