<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Creating Your Own Crate</h1>
                </header>
            
            <article>
                
<p>Most languages allow for external libraries to be created. These typically contain commonly used pieces of code that are for general use. For example, libraries for deserializing JSON are fairly common, as are math libraries. Rust is no exception. It allows for the creation of libraries (known as <strong>crates</strong>). These crates can be kept to yourself or distributed however you see fit. The metadata about crates is stored on a public service, at <a href="https://crates.io/">https://crates.io/</a>.</p>
<p>In this chapter, we will cover the following topics:</p>
<ul>
<li>How crates are created</li>
<li>How the directory structure is used</li>
<li>How crates are made up of modules</li>
<li>How to include your crate within your code</li>
<li>How scopes are used with your modules</li>
</ul>


            </article>

            
        </section>
    </div></body>
</html>