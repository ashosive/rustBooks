<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>
            <header>
                <h1>Table of Contents</h1>
            </header>

            <article>
                <nav epub:type="toc" id="toc">
                    <ol><li style="list-style-type:none">
    <a href="ec8e91ea-6a95-48c0-8864-73b23c0f1179.xhtml">Preface</a>
    <ol><li style="list-style-type:none">
    <a href="928247db-4b1d-49df-bba0-cd57e7d73062.xhtml">What this book covers</a>
    
</li>
<li style="list-style-type:none">
    <a href="3f894e75-b7f6-42ad-a1e6-7b16bd28f7d7.xhtml">What you need for this book</a>
    
</li>
<li style="list-style-type:none">
    <a href="8ae10273-019a-4232-b8e5-1d65338721bd.xhtml">Who this book is for</a>
    
</li>
<li style="list-style-type:none">
    <a href="d2965b88-7e56-43d7-864f-7a5d80f7b8b0.xhtml">Conventions</a>
    
</li>
<li style="list-style-type:none">
    <a href="355de38f-92a3-4a7d-855e-da90f6fbc60f.xhtml">Reader feedback</a>
    
</li>
<li style="list-style-type:none">
    <a href="172ea809-92d0-4ce0-ac45-6c9e98ba78fc.xhtml">Customer support</a>
    <ol><li style="list-style-type:none">
    <a href="a529eff5-4ce5-4caa-b05a-57b0cc15f390.xhtml">Downloading the example code</a>
    
</li>
<li style="list-style-type:none">
    <a href="412dec7d-30c6-4100-b790-5b90029d46bb.xhtml">Errata</a>
    
</li>
<li style="list-style-type:none">
    <a href="5f2a7195-5325-46b9-b707-932efe4fcf73.xhtml">Piracy</a>
    
</li>
<li style="list-style-type:none">
    <a href="8f08bfad-9f5c-4b5f-bd1c-69f022992c00.xhtml">Questions</a>
    
</li>
</ol>
</li>
</ol>
</li>
<li style="list-style-type:decimal" value="1">
    <a href="67a55e55-a5f7-4ced-a2ae-b81f77614eec.xhtml">Introducing and Installing Rust</a>
    <ol><li style="list-style-type:none">
    <a href="b21d6b5c-8207-4e6c-ab7d-797ff998a001.xhtml">Installing Rust</a>
    <ol><li style="list-style-type:none">
    <a href="a9389dbb-17a1-4960-9178-d5a466126a9d.xhtml">Installing rustup on Linux</a>
    
</li>
<li style="list-style-type:none">
    <a href="0ae30bb6-151e-452f-b310-d8e1fe0dccb1.xhtml">gcc prerequisites</a>
    <ol><li style="list-style-type:none">
    <a href="f6dac716-54a3-4f07-ba39-13da607ae934.xhtml">Testing your installation</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="3b351eaf-8c62-45e1-ad78-74bad6998688.xhtml">Integrated Development Environment</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="ea815431-0fb5-4ff9-8266-beb9f52198b8.xhtml">Your first Rust project</a>
    <ol><li style="list-style-type:none">
    <a href="ef4789a2-7f90-4207-91dc-dc85e899c79b.xhtml">Structure of a Rust project</a>
    
</li>
<li style="list-style-type:none">
    <a href="e908d38b-f54d-47ce-9507-1bffc943d47a.xhtml">Automating things</a>
    <ol><li style="list-style-type:none">
    <a href="015fe80a-9722-4327-8b70-507dee7c1fab.xhtml">Creating a binary package using Cargo</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="d154b875-65bb-4044-a516-e7f0460d612f.xhtml">Using Cargo to build and run an application</a>
    <ol><li style="list-style-type:none">
    <a href="abae7a86-a668-4f3c-9a97-5ceed68c6af8.xhtml">Cleaning your source tree with Cargo</a>
    
</li>
<li style="list-style-type:none">
    <a href="63faff3b-e8a4-4283-9171-90e84ada6c62.xhtml">Creating documentation using Cargo</a>
    <ol><li style="list-style-type:none">
    <a href="7c2fd20f-7cd3-4621-9d07-d3af19f08bd7.xhtml">rustdoc versus Cargo</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="39d6c6a5-fdc1-4504-a774-8e0f981c0441.xhtml">Using Cargo to help with your unit testing</a>
    <ol><li style="list-style-type:none">
    <a href="7503fffa-2967-4640-bd1d-ab5259922aa0.xhtml">Assert yourself!</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="2d82d8a4-bdd8-40ce-a95e-a31760c2c364.xhtml">Is there anything Cargo can't do?</a>
    
</li>
</ol>
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="e3f8e672-3671-45d6-bdba-30e9090be2d0.xhtml">Summary</a>
    
</li>
</ol>
</li>
<li style="list-style-type:decimal" value="2">
    <a href="d01e62f9-9349-4eaa-a63b-ab0e691c56cc.xhtml">Variables</a>
    <ol><li style="list-style-type:none">
    <a href="0aa36b1b-6250-47be-8cb6-ba85d628c0ed.xhtml">Variable mutability</a>
    <ol><li style="list-style-type:none">
    <a href="60b903b6-510c-4cc8-b653-9d11ab216e71.xhtml">Creating a variable</a>
    <ol><li style="list-style-type:none">
    <a href="b0cfd591-16e9-4ef9-ba41-e25d9995b31a.xhtml">How can we tell the compiler that we want x to be an int?</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="ba23ebdd-11a3-4ec0-bf2b-7475888533fe.xhtml">Defining other variable types</a>
    <ol><li style="list-style-type:none">
    <a href="c1635fb1-bde9-4b8f-8b39-282f4049d4e4.xhtml">Float</a>
    
</li>
<li style="list-style-type:none">
    <a href="ad238e98-b4ae-461e-8333-569632e6cce0.xhtml">Signed and unsigned integers</a>
    
</li>
<li style="list-style-type:none">
    <a href="348e826a-e37b-4d9c-bb24-e4456f356a0d.xhtml">Const and static</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="c6808999-90fb-4d01-b811-a7fe2c60e6f0.xhtml">Defining the variable value before use</a>
    <ol><li style="list-style-type:none">
    <a href="c4d6c6dc-a4b2-4541-8a57-eced07225df7.xhtml">Strings</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="07289ea0-5a93-47e2-a7b9-8026655e5fc5.xhtml">How Rust uses memory</a>
    <ol><li style="list-style-type:none">
    <a href="32149687-8113-452f-bf2f-fa2b808116f3.xhtml">Back to Strings</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="5dd9d77b-4563-4924-8480-a3d70a597dbe.xhtml">String slices</a>
    <ol><li style="list-style-type:none">
    <a href="a15b6658-33ae-45d9-8ffc-845a4f5f94d9.xhtml">What's with the warnings?</a>
    
</li>
<li style="list-style-type:none">
    <a href="bbff7e7c-9713-430d-9686-c37699ff84b0.xhtml">Using the format! macro</a>
    
</li>
<li style="list-style-type:none">
    <a href="35219f39-e447-4e32-a1a1-af1963d200fc.xhtml">Building a string</a>
    
</li>
<li style="list-style-type:none">
    <a href="756f9ade-0212-4af7-b817-a8f5efdcf43c.xhtml">Code review</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="8a464c79-66c0-4f54-84f2-8e1bb7ec32be.xhtml">Casting</a>
    
</li>
<li style="list-style-type:none">
    <a href="0e03d061-21eb-446f-955e-1531c0d5ef9a.xhtml">String methods</a>
    
</li>
<li style="list-style-type:none">
    <a href="5a0d660c-8b66-48f5-92ac-3aceb9757367.xhtml">Generics and arrays</a>
    
</li>
<li style="list-style-type:none">
    <a href="7e31d0ed-c148-498d-b49a-3dcea283cee5.xhtml">Arrays</a>
    <ol><li style="list-style-type:none">
    <a href="b6924c14-eb60-439a-96f7-6ddabf95dc59.xhtml">Array performance</a>
    
</li>
<li style="list-style-type:none">
    <a href="a509e955-cb1f-48a4-a6ca-e138eb11fd40.xhtml">Vectors</a>
    
</li>
<li style="list-style-type:none">
    <a href="c225a8ee-b376-47bb-ae48-26dd5a98211b.xhtml">Creating a vector with an initial size</a>
    
</li>
<li style="list-style-type:none">
    <a href="3f219a23-02ea-4650-bc1c-8fc9f451225e.xhtml">Creating a vector via an iterator</a>
    
</li>
<li style="list-style-type:none">
    <a href="e23bb071-459c-4565-93e5-59ce6ff049c5.xhtml">Adding and removing from the vector</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="62d6f7d8-8bac-418a-bb31-03706c916e02.xhtml">Manipulating an array or vector via slices</a>
    
</li>
<li style="list-style-type:none">
    <a href="61b6e06f-8d77-403d-bd42-6ca0dfda9dcc.xhtml">Passing values around</a>
    
</li>
<li style="list-style-type:none">
    <a href="adbc4d8f-e650-4138-9c9e-4cffddc94d09.xhtml">Passing by value</a>
    
</li>
<li style="list-style-type:none">
    <a href="77e1b49e-bc6d-4837-89d3-5d7c1ec0b197.xhtml">Passing by reference</a>
    <ol><li style="list-style-type:none">
    <a href="d38f3a37-560d-4878-aeab-d7ddb576e83d.xhtml">The reference type</a>
    
</li>
<li style="list-style-type:none">
    <a href="135817b0-0f3b-472b-9c0c-8c7ec1b1abec.xhtml">A practical example</a>
    
</li>
</ol>
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="01c5279a-d45a-4336-b46b-7d7e7010fefd.xhtml">Summary</a>
    
</li>
</ol>
</li>
<li style="list-style-type:decimal" value="3">
    <a href="967a5f58-da17-4dae-850c-448c405b45f5.xhtml">Input and Output</a>
    <ol><li style="list-style-type:none">
    <a href="11e9381a-3b43-4c8f-a455-67e2c9d9498e.xhtml">Functions and methods in Rust</a>
    <ol><li style="list-style-type:none">
    <a href="4108015b-2889-4e74-827a-c3dd3de3c9c5.xhtml">The difference between println! and println</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="e4dd0faf-13a7-47a2-8afc-133142c3b85a.xhtml">Introduction to the standard library</a>
    <ol><li style="list-style-type:none">
    <a href="3cb0bab8-7b0e-4229-a784-add3a9d368de.xhtml">The libraries</a>
    
</li>
<li style="list-style-type:none">
    <a href="6c09bd4b-b3f4-4082-8b38-01f18df7a93a.xhtml">Controlling the output formatting</a>
    <ol><li style="list-style-type:none">
    <a href="5f11d172-7436-46e6-8339-cd216c2029ce.xhtml">Positioning the output</a>
    
</li>
<li style="list-style-type:none">
    <a href="61dd6807-b2b7-4610-b787-e761f878c073.xhtml">Named parameters</a>
    
</li>
<li style="list-style-type:none">
    <a href="aaa44811-57f1-4f17-80c3-110226b9408d.xhtml">Specifying the argument types</a>
    
</li>
<li style="list-style-type:none">
    <a href="1dff6b88-f2db-4f8d-a373-2f43df5fd120.xhtml">Formatting traits</a>
    
</li>
<li style="list-style-type:none">
    <a href="bf768303-ff7e-44e1-9449-b4c2e86c7e15.xhtml">Formatting parameters</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="18d7c2f8-6a8d-422f-bab2-c202c9252a9c.xhtml">Getting information in</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="abc13341-4ea3-4032-a85b-671dc3ba79dd.xhtml">Command-line arguments</a>
    
</li>
<li style="list-style-type:none">
    <a href="61482290-d782-4e6e-a748-8ff751e3e0c1.xhtml">Handling files</a>
    <ol><li style="list-style-type:none">
    <a href="b1584de7-5500-408c-97fc-b7653c55c6e1.xhtml">Reading from a file</a>
    <ol><li style="list-style-type:none">
    <a href="15a092a8-0ba9-4207-a46d-c22848ea3ab8.xhtml">Loading a file</a>
    
</li>
<li style="list-style-type:none">
    <a href="d822a6d3-4439-4b33-a28b-ea8a42bcef59.xhtml">Writing a file</a>
    
</li>
<li style="list-style-type:none">
    <a href="c2c61efb-ddfd-4473-a76e-89db1d2366c2.xhtml">The use of expect</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="94343c14-45e2-4819-9d9a-66671ae61c5d.xhtml">XML and Rust</a>
    <ol><li style="list-style-type:none">
    <a href="f921c79c-375e-4401-b1c2-d7ac7649b727.xhtml">Reading a file</a>
    
</li>
<li style="list-style-type:none">
    <a href="a8ace0a3-f962-4077-bb1e-aafbc9c0e522.xhtml">Writing a file</a>
    
</li>
</ol>
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="9243fd50-51de-412b-b491-61e7954f924c.xhtml">Summary</a>
    
</li>
</ol>
</li>
<li style="list-style-type:decimal" value="4">
    <a href="9a839bb4-2bb8-448c-9bfe-fef63fab99f1.xhtml">Conditions, Recursion, and Loops</a>
    <ol><li style="list-style-type:none">
    <a href="d65f632a-bd97-4348-ab2c-eeef03fcd850.xhtml">Loops</a>
    <ol><li style="list-style-type:none">
    <a href="eddc45f7-fb7d-4a91-a33f-72a00a26af2d.xhtml">The for loop</a>
    <ol><li style="list-style-type:none">
    <a href="70af2a22-d0e1-46ab-ae11-72630a834c33.xhtml">Using enumerate</a>
    
</li>
<li style="list-style-type:none">
    <a href="191f2a05-e29b-49c4-8d2e-b7c3ae2e96a9.xhtml">The _ parameter</a>
    
</li>
<li style="list-style-type:none">
    <a href="587dc5f1-3be5-4cfd-adf6-4544a177acab.xhtml">The simple loop</a>
    
</li>
<li style="list-style-type:none">
    <a href="1fe6016f-d259-4ce8-9c6f-cc3f78ca0019.xhtml">The while condition</a>
    
</li>
<li style="list-style-type:none">
    <a href="0296095d-cc74-4244-9941-dd97d87d474d.xhtml">Prematurely terminating a loop</a>
    
</li>
<li style="list-style-type:none">
    <a href="bf97b9ee-7bd1-4c75-beec-417182000802.xhtml">Using loop labels</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="0af82f6d-078f-403c-a91b-8d49a626edfb.xhtml">Recursive functions</a>
    <ol><li style="list-style-type:none">
    <a href="910662cb-729c-4def-81e9-4fa024d4e0eb.xhtml">What is the difference between having and not having a semicolon?</a>
    
</li>
</ol>
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="9039941c-b1dd-4e40-bdd1-119794808bfe.xhtml">Summary</a>
    
</li>
</ol>
</li>
<li style="list-style-type:decimal" value="5">
    <a href="8fe31315-5c12-4aaa-ab08-e4c18c3919f9.xhtml">Remember, Remember</a>
    <ol><li style="list-style-type:none">
    <a href="8a053d4f-c25d-40ea-acd7-88e5ab735267.xhtml">Let's start at the beginning</a>
    <ol><li style="list-style-type:none">
    <a href="e2697bfe-c361-4034-8da8-da48612c0671.xhtml">The stack frame</a>
    <ol><li style="list-style-type:none">
    <a href="6743574d-b2a2-4086-a4a4-9b8331d64c2d.xhtml">What is meant by the stack?</a>
    
</li>
</ol>
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="7709c3dd-8f11-444e-99ae-aaf2e5dba1bb.xhtml">Let's consider the heap</a>
    <ol><li style="list-style-type:none">
    <a href="536c2670-562f-495d-b0ec-1e22a30c896c.xhtml">Deallocation</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="8374ea09-8041-4c84-9de3-d380106c946a.xhtml">What about functions with arguments?</a>
    
</li>
<li style="list-style-type:none">
    <a href="4561390c-15c3-45d3-8135-6e9c7a0238d0.xhtml">Static memory allocation</a>
    <ol><li style="list-style-type:none">
    <a href="1dfa43a1-e914-4b48-84ca-f25dc97e339d.xhtml">Garbage collecting time and ownership</a>
    <ol><li style="list-style-type:none">
    <a href="d4cc0ad3-8a4a-40d3-9fcc-e84fd33566b2.xhtml">An owned pointer example</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="d0f02f49-92cb-4683-86e0-ac7f16fc1d7c.xhtml">Comparison to C</a>
    
</li>
<li style="list-style-type:none">
    <a href="9fcfb72f-f212-4875-bd18-ce8f5c30269a.xhtml">Let's revisit some old code</a>
    
</li>
<li style="list-style-type:none">
    <a href="7cbc7948-83e7-4b80-b9a6-a8b757d34403.xhtml">Let's not race ahead!</a>
    <ol><li style="list-style-type:none">
    <a href="2944c0b7-f394-424d-9fc7-3364ef02cc60.xhtml">Stop the race...</a>
    
</li>
</ol>
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="9264a1b1-4a0e-41b8-bb5f-9c2fb788a65c.xhtml">Summary</a>
    
</li>
</ol>
</li>
<li style="list-style-type:decimal" value="6">
    <a href="24651b17-6de3-4f1a-a182-f90810b48934.xhtml">Creating Your Own Rust Applications</a>
    <ol><li style="list-style-type:none">
    <a href="4e10e2e3-2e46-4a08-ab6c-913a18ca9f02.xhtml">Project 1 - let's start with some math</a>
    <ol><li style="list-style-type:none">
    <a href="2cdfae39-a90f-412d-bcd5-8a047829835e.xhtml">Requirements</a>
    <ol><li style="list-style-type:none">
    <a href="4d6ed716-4553-41ee-af8b-ed1d0b5852e0.xhtml">Supplied data</a>
    
</li>
<li style="list-style-type:none">
    <a href="71e9a309-1db0-472c-92de-8c24fac33df0.xhtml">Application output</a>
    
</li>
</ol>
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="05a2c877-2537-48b0-a16c-9d5a64b3a7cd.xhtml">Project 2 - some text manipulation</a>
    <ol><li style="list-style-type:none">
    <a href="5d946635-c754-46c4-ac39-d602c7696a92.xhtml">Requirements</a>
    <ol><li style="list-style-type:none">
    <a href="c9ceb021-0276-4bcc-97cb-9948bbc86b88.xhtml">Code notes</a>
    
</li>
</ol>
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="bcd7da42-c275-4751-8cfc-775f12d5dcc9.xhtml">Project 3 – area and volume</a>
    <ol><li style="list-style-type:none">
    <a href="e0b218d2-cd83-45b9-a213-b91ef74d2e04.xhtml">Shape types</a>
    <ol><li style="list-style-type:none">
    <a href="06d5b137-abae-4ed3-b6c2-ebebc8300a70.xhtml">Volume or area</a>
    
</li>
<li style="list-style-type:none">
    <a href="f3b2fae6-6aaf-4a19-bd60-88d2466b8eba.xhtml">User-defined shape</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="04eef21e-6045-48b5-a9e1-a171227de1ed.xhtml">Formulae for calculations</a>
    
</li>
<li style="list-style-type:none">
    <a href="723184e9-fe3f-48a2-b680-22433dd732f9.xhtml">Testing criteria</a>
    
</li>
<li style="list-style-type:none">
    <a href="0eedbec4-5164-465d-9179-46b1d6413c21.xhtml">Auto-documentation</a>
    <ol><li style="list-style-type:none">
    <a href="d24746e7-e742-4bd4-af4d-0f9ae50b7a00.xhtml">Using regular expressions (regex)</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="b64dd02b-7ed8-4a4a-940d-97171cd4bcc9.xhtml">Input and output</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="9b92057d-ab95-4063-bda3-194beb589a92.xhtml">Project 4 – memory</a>
    <ol><li style="list-style-type:none">
    <a href="ff67e4f9-69f2-4d1f-a90c-2c407a7d80d1.xhtml">Bitwise rotation</a>
    <ol><li style="list-style-type:none">
    <a href="402651c0-865d-48af-a81c-242fdc40ad48.xhtml">Rotation caveat</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="70ef2965-e35f-4bd9-8faf-d75f817b91e6.xhtml">Output</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="e639bb1a-17c2-4957-8496-2354ad3a1582.xhtml">Summary</a>
    
</li>
</ol>
</li>
<li style="list-style-type:decimal" value="7">
    <a href="c8b24f94-2b7a-474d-aa24-4fd0ceb615ce.xhtml">Matching and Structures</a>
    <ol><li style="list-style-type:none">
    <a href="59881fba-0177-4b53-8f10-55eba844dbc7.xhtml">Structs 101</a>
    <ol><li style="list-style-type:none">
    <a href="2eab0fdc-487d-4bfe-bc01-fa1f8ea4de6e.xhtml">Variables, variables everywhere</a>
    <ol><li style="list-style-type:none">
    <a href="4d3f72de-e251-4569-b413-59c8d54772b6.xhtml">The structure of a struct</a>
    
</li>
<li style="list-style-type:none">
    <a href="d6063bbe-57f9-451b-9712-aa8452b838e1.xhtml">Smaller is better</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="56989b57-f5f6-4811-ad14-b85785933840.xhtml">Accessing a struct</a>
    
</li>
<li style="list-style-type:none">
    <a href="87549d48-2e24-4438-99ec-81c65456702b.xhtml">Defining the child structures</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="9dd69d6c-007e-4ddd-882d-1ea1c290c919.xhtml">Multi-file version</a>
    <ol><li style="list-style-type:none">
    <a href="c9c3be69-759b-4670-b8b4-625c66335820.xhtml">Private versus public fields</a>
    
</li>
<li style="list-style-type:none">
    <a href="398d3d47-c852-44b6-94e8-d554512d5e1c.xhtml">Structs 102</a>
    
</li>
<li style="list-style-type:none">
    <a href="54d21e45-c8fc-4614-af2b-14abc2daf054.xhtml">Tuples</a>
    <ol><li style="list-style-type:none">
    <a href="909fd7f9-a50d-4723-a1eb-ece526bb89f7.xhtml">Using a tuple to define a variable</a>
    <ol><li style="list-style-type:none">
    <a href="2972bc0c-7d96-41f7-90dd-0e8e479f8796.xhtml">Tuple indexing</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="da06d6a5-dba8-4c96-ab68-9075ee06947c.xhtml">Destructuring with let</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="7d27d2fc-a17f-4674-87ea-74844b82b161.xhtml">Tuple structs – the hybrid of two</a>
    <ol><li style="list-style-type:none">
    <a href="647b3e7b-4962-4a6a-9793-61c53eb97f65.xhtml">The single element tuple struct</a>
    
</li>
<li style="list-style-type:none">
    <a href="7df62ab5-b644-4af7-8c44-fcdaba51a072.xhtml">Back to the unit-like struct</a>
    
</li>
</ol>
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="c07cc7de-fcfe-4e44-b1a4-be2b06c437ab.xhtml">Enumerations</a>
    <ol><li style="list-style-type:none">
    <a href="efb82292-c8dd-4e54-bf6f-7377ef26c9dd.xhtml">Accessing enumeration members</a>
    <ol><li style="list-style-type:none">
    <a href="2d06e4e7-865e-418a-9869-5fa328b702ca.xhtml">The two questions you should be asking</a>
    
</li>
</ol>
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="683e7269-9ea8-4f43-bfc0-c8f064652e87.xhtml">Patterns and matching</a>
    <ol><li style="list-style-type:none">
    <a href="6b956f6d-33ee-4614-9e49-2bb000f806c0.xhtml">Matching</a>
    <ol><li style="list-style-type:none">
    <a href="827cf450-a857-46d0-90f6-783f9be92599.xhtml">Let's really make the function simple</a>
    
</li>
<li style="list-style-type:none">
    <a href="23956e71-3887-4188-b240-3a961fbefa0a.xhtml">Using match with an enum</a>
    
</li>
<li style="list-style-type:none">
    <a href="7934bed4-a934-43b9-8611-3130e3be7af6.xhtml">Ignoring a parameter with match</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="c77139fe-4c3b-4bd0-9774-a1e40e023714.xhtml">Fall through patterns</a>
    <ol><li style="list-style-type:none">
    <a href="0ac63828-f5a0-4b76-9ae6-a3f022891729.xhtml">Ranges</a>
    
</li>
<li style="list-style-type:none">
    <a href="ed9de8ff-1abe-46e2-9156-46edb34f0a2c.xhtml">Creating a binding within a match pattern</a>
    
</li>
<li style="list-style-type:none">
    <a href="ccbdd042-93a8-46ff-b0c0-ffdafb129727.xhtml">Let's add an if into the mix</a>
    
</li>
<li style="list-style-type:none">
    <a href="2fcbe8b8-430c-47e5-93e0-83198e109da2.xhtml">Using match with a compound type</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="a8e8de98-69ad-4133-9155-ed707f7d2e1c.xhtml">And back to if let</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="68038668-f9e7-4ca3-b987-017dbf0fb50f.xhtml">Summary</a>
    
</li>
</ol>
</li>
<li style="list-style-type:decimal" value="8">
    <a href="9764ae84-9948-4bc8-a9d7-7537b2f31723.xhtml">The Rust Application Lifetime</a>
    <ol><li style="list-style-type:none">
    <a href="51446cd8-fcdb-42e9-8a1a-b83c18bb3ac3.xhtml">What are they?</a>
    <ol><li style="list-style-type:none">
    <a href="93645dfa-1163-48f7-a7be-116ea5289509.xhtml">Ownership</a>
    
</li>
<li style="list-style-type:none">
    <a href="751e4f1a-2cef-4fe4-bbef-26ea732a56f1.xhtml">Borrowing</a>
    
</li>
<li style="list-style-type:none">
    <a href="977dc0b8-ed35-47be-8b05-1801bf8a5585.xhtml">Lifetime</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="c709690d-fc57-4958-9bac-871e4402bfa9.xhtml">Ownership in Rust</a>
    <ol><li style="list-style-type:none">
    <a href="ecd0bd2a-8da4-4f16-ace4-d9efc405de55.xhtml">Abstractions</a>
    
</li>
<li style="list-style-type:none">
    <a href="c9c1f519-5327-48a1-908b-76e2098b9bae.xhtml">Ownership – from the beginning</a>
    <ol><li style="list-style-type:none">
    <a href="3a2ba78f-f867-4c0b-8f6c-f2855f4f5120.xhtml">Variable binding</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="cb870656-435d-40f4-81aa-decd77ab75a7.xhtml">Stack and heap variables</a>
    <ol><li style="list-style-type:none">
    <a href="49271b80-8724-44b3-bae4-b252cef0c4fa.xhtml">Why is this important?</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="687ea5af-cf15-4f9d-93ca-3567b773da72.xhtml">The Copy trait</a>
    
</li>
<li style="list-style-type:none">
    <a href="199b2166-1ab5-4ac0-bd7d-876af83e1d89.xhtml">Borrowing in Rust</a>
    <ol><li style="list-style-type:none">
    <a href="19bf5441-b29d-4d26-b803-a1dc8828b701.xhtml">Borrow immutability</a>
    
</li>
<li style="list-style-type:none">
    <a href="ed42769d-45d5-4c27-968c-62c6bfde165c.xhtml">Mutable borrows</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="3e8b0c0b-cf58-4af8-a965-98b6c31fabf9.xhtml">The Rust borrowing rules</a>
    
</li>
<li style="list-style-type:none">
    <a href="5de6e807-d21a-41f7-9a16-959ef9db8781.xhtml">Fixing the problem</a>
    <ol><li style="list-style-type:none">
    <a href="427c44fc-3555-4e92-b59e-abdfe71746cb.xhtml">Think about the scope</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="fbcf8fbc-eee3-4cc4-8d0f-1ce0f9de72e0.xhtml">It's all for your own good</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="d5d705db-5812-4d95-80eb-8235d9c7bc07.xhtml">The lifetime</a>
    <ol><li style="list-style-type:none">
    <a href="225cd3f0-9c9a-4062-afea-4d66a50af4a0.xhtml">The mythical bank account</a>
    
</li>
<li style="list-style-type:none">
    <a href="7ba06157-4733-4c40-8e9c-ebf55e8b20b2.xhtml">The lifetime variable - '</a>
    
</li>
<li style="list-style-type:none">
    <a href="4f7f0941-1a36-43f9-9e0f-0f7b473e1647.xhtml">Lifetime of other types</a>
    <ol><li style="list-style-type:none">
    <a href="d72f1d0e-b1f1-450b-b386-9662f03db1e2.xhtml">Lifetime within an struct</a>
    
</li>
<li style="list-style-type:none">
    <a href="70d565c5-9e4f-4a9e-b858-384e2d9cb2c9.xhtml">Multiple lifetimes</a>
    
</li>
<li style="list-style-type:none">
    <a href="53e5c189-0465-4913-a146-6752ad893337.xhtml">Always consider the scope</a>
    
</li>
<li style="list-style-type:none">
    <a href="c9543b1d-deac-45be-8960-2b16099d2720.xhtml">'struct</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="702f7b48-bd12-47e9-8238-c60a5ebcc134.xhtml">Input and output lifetimes</a>
    <ol><li style="list-style-type:none">
    <a href="5dc30584-8856-4285-8f9e-157dbe274005.xhtml">Input only</a>
    
</li>
<li style="list-style-type:none">
    <a href="a4b69682-5796-4ba4-974f-b3cb2c92c0b9.xhtml">Output only</a>
    
</li>
<li style="list-style-type:none">
    <a href="4ed7fdd1-b060-4f7f-bc2e-68ab3a0aa3a4.xhtml">Input and output</a>
    
</li>
</ol>
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="a849d2c2-2e2f-490e-87f6-51c757c687c8.xhtml">Summary</a>
    
</li>
</ol>
</li>
<li style="list-style-type:decimal" value="9">
    <a href="d6c48f90-429b-4465-ba88-6adb7ca437bb.xhtml">Introducing Generics, Impl, and Traits</a>
    <ol><li style="list-style-type:none">
    <a href="5db4dd62-297e-4ebb-8d78-ca02f1929d8f.xhtml">Generics 101</a>
    <ol><li style="list-style-type:none">
    <a href="5c7bfefa-b6f0-46be-96a5-69463971fa21.xhtml">Understanding the error</a>
    
</li>
<li style="list-style-type:none">
    <a href="99be0bed-082c-443d-a7b2-4f63a07394e9.xhtml">A generic problem</a>
    <ol><li style="list-style-type:none">
    <a href="a6d2a4f2-e64e-4189-82c2-1be266e5eb0b.xhtml">The unsafe directive</a>
    
</li>
<li style="list-style-type:none">
    <a href="61c2344a-cfc3-4fc5-bb1c-9773c02d1bc3.xhtml">The whole #!</a>
    
</li>
</ol>
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="81672703-c1de-4da7-a46a-4f84b1b3e29c.xhtml">Traits and Impl</a>
    <ol><li style="list-style-type:none">
    <a href="abe8aaa7-0ca1-419e-8952-efb265b61c22.xhtml">Impl</a>
    
</li>
<li style="list-style-type:none">
    <a href="f69c3257-1c05-42df-8c72-c86bf913dc85.xhtml">The impl lifetime</a>
    
</li>
<li style="list-style-type:none">
    <a href="bead61b4-4f88-4e3b-879b-cb657ee9a80c.xhtml">And back to traits we go...</a>
    
</li>
<li style="list-style-type:none">
    <a href="789ab9d7-74ac-4030-93a8-d7de824d1975.xhtml">A simple crate example</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="4e1503a9-afd0-41ff-9827-ae37503d4493.xhtml">Traits and generics</a>
    <ol><li style="list-style-type:none">
    <a href="9043d048-9198-4a0d-bd2d-0bb2b74d172a.xhtml">Defining the impl for specific types</a>
    
</li>
<li style="list-style-type:none">
    <a href="5efc2aa2-01c2-434c-8ee7-aba1adfd2009.xhtml">Using where</a>
    
</li>
<li style="list-style-type:none">
    <a href="2ec4248a-2ef7-42d1-be1a-6ae752fa92bb.xhtml">Making it work</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="3fc6fa76-e5e8-4807-a3b6-86c35d39040b.xhtml">Something you may have noticed</a>
    <ol><li style="list-style-type:none">
    <a href="509bcb29-e735-4e2b-8872-6ed9a232956a.xhtml">Generics - a small aside</a>
    <ol><li style="list-style-type:none">
    <a href="5f34faa5-461b-4e1f-a779-dc8903ef4171.xhtml">So what does happen?</a>
    
</li>
</ol>
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="945d0d4f-3d50-4576-ad43-4ae5e271d0c5.xhtml">Back to the where version</a>
    <ol><li style="list-style-type:none">
    <a href="1d682865-15b2-4410-9aa5-6de37dedc08c.xhtml">Try to compile</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="959ea038-d48e-401f-b28e-854224f8f1c7.xhtml">Trait bounds</a>
    
</li>
<li style="list-style-type:none">
    <a href="9c40362b-41ba-445c-847b-d1129b4f3c4b.xhtml">Can we reduce the amount of code further?</a>
    <ol><li style="list-style-type:none">
    <a href="19c2e205-9505-447a-a324-2ab3a7f7d935.xhtml">Can the default method be overridden?</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="11f1dfce-b48b-43a3-8073-c10cd96ea724.xhtml">Rounding off traits</a>
    <ol><li style="list-style-type:none">
    <a href="f4342610-f8ca-46ab-bf51-21a1ef65f4d4.xhtml">Inheritance</a>
    
</li>
<li style="list-style-type:none">
    <a href="4da4d8a2-8216-4040-82a4-40ef2dd74383.xhtml">Deriving</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="d47b7918-1546-4dac-bdf0-c55d395e0a4c.xhtml">Trait objects</a>
    <ol><li style="list-style-type:none">
    <a href="eee10c20-68b2-4eb0-b63a-f6a3a2e048b4.xhtml">Let's create a sample test setup</a>
    
</li>
<li style="list-style-type:none">
    <a href="08520ddd-e19f-437a-a666-5be67d183ca5.xhtml">Let's see dynamic dispatch</a>
    
</li>
<li style="list-style-type:none">
    <a href="d6aebca7-e0df-47ed-8f59-00491701982e.xhtml">Keeping your object safe</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="b041c2e6-2573-49e9-a6f8-98c3dd9a05f2.xhtml">Summary</a>
    
</li>
</ol>
</li>
<li style="list-style-type:decimal" value="10">
    <a href="4925c4c4-a4ec-4c62-8a2a-f5563e2592b6.xhtml">Creating Your Own Crate</a>
    <ol><li style="list-style-type:none">
    <a href="6ed3a8ec-fa87-4ece-8034-13727a7f2086.xhtml">What exactly is a crate?</a>
    <ol><li style="list-style-type:none">
    <a href="97298003-3f10-45f5-8e51-c0cf0cf74a9e.xhtml">Looking at modules</a>
    <ol><li style="list-style-type:none">
    <a href="5b1d3951-35b4-4b77-9a13-4e9b1328520d.xhtml">I can see a problem with this analogy</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="fe62b086-51ff-46d1-b6a4-71a778229b5e.xhtml">Back to our math library</a>
    <ol><li style="list-style-type:none">
    <a href="9ea2e6b2-7571-4556-85cd-d2ed7d0229a6.xhtml">Using a useful name</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="0be3ba73-69ad-4f74-a8ac-39760758e695.xhtml">Let's create!</a>
    <ol><li style="list-style-type:none">
    <a href="f3f055f0-f855-4da2-af77-96fef1e4d6f5.xhtml">Creating top-level modules</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="48c88830-c6ea-4918-aa20-5401c583b4ea.xhtml">The multifile module</a>
    <ol><li style="list-style-type:none">
    <a href="739fbedc-46e0-41d5-b8c9-25c388f0b8d7.xhtml">What about submodules?</a>
    
</li>
<li style="list-style-type:none">
    <a href="fcfa2417-6ccd-4812-8e26-414f462098fd.xhtml">The mod.rs file</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="2f85d816-921a-44c9-b191-050935ec41f3.xhtml">Let's add some code</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="bd2cbda1-cc0c-444f-a364-62a0251341dd.xhtml">Beware of double name scopes</a>
    <ol><li style="list-style-type:none">
    <a href="90eea39e-cebe-4c04-ac71-72eb6c36e2d9.xhtml">Adding unit tests to the library</a>
    <ol><li style="list-style-type:none">
    <a href="d095fc4b-dc32-485c-b3c6-c2252e8380aa.xhtml">Making something public</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="783fee66-c173-4d60-8936-8eea95bd2e6d.xhtml">Let's give our crate a quick run out</a>
    <ol><li style="list-style-type:none">
    <a href="a8241251-2e64-420b-8a99-7c26fe8a65d3.xhtml">External dependencies</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="f53abdc6-18fc-438e-a50a-8f4bbd0c3e33.xhtml">Changing the scope</a>
    <ol><li style="list-style-type:none">
    <a href="a89e16c8-8312-4852-9283-4996da5b7610.xhtml">Altering the crate name</a>
    
</li>
<li style="list-style-type:none">
    <a href="a863a06e-9fd5-4456-bb8c-760cd0843604.xhtml">Optimizing your use statements</a>
    <ol><li style="list-style-type:none">
    <a href="51224780-aa88-410a-a1b9-ec3527f4c4df.xhtml">The use-everything approach</a>
    
</li>
<li style="list-style-type:none">
    <a href="bb63f5c0-01df-464e-9e08-578d9822b9ea.xhtml">The you-decide approach</a>
    
</li>
<li style="list-style-type:none">
    <a href="cf557d7b-57d1-4586-bec0-fdc583a268f5.xhtml">The use-me approach</a>
    
</li>
<li style="list-style-type:none">
    <a href="75dd70d6-205c-436d-8e89-0f640090fad5.xhtml">The use-me-but-call-me-something-else approach</a>
    
</li>
<li style="list-style-type:none">
    <a href="6832bae7-ecfd-4566-b3e5-d9bbacb17a1f.xhtml">The use-glob approach</a>
    
</li>
<li style="list-style-type:none">
    <a href="fd7015f9-5c21-4551-8743-7b8d8dfd39bb.xhtml">The use-glob-self approach</a>
    
</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="754b91a3-8504-4b51-93e1-0310e7844fa8.xhtml">Summary</a>
    
</li>
</ol>
</li>
<li style="list-style-type:decimal" value="11">
    <a href="636b329f-0544-4c2d-9924-fcd12f105567.xhtml">Concurrency in Rust</a>
    <ol><li style="list-style-type:none">
    <a href="f0cdc10b-1997-46cd-85cc-2103fc76e9e9.xhtml">A bit of a story</a>
    <ol><li style="list-style-type:none">
    <a href="2cd58c83-6ef3-4ad4-8614-2a73117057df.xhtml">What was that all about?</a>
    
</li>
<li style="list-style-type:none">
    <a href="0a15b27f-cb1a-406b-bcb7-ea0aaa3d5fdd.xhtml">Send</a>
    
</li>
<li style="list-style-type:none">
    <a href="11273b91-aff9-4394-a29c-8230a392fd81.xhtml">Sync</a>
    <ol><li style="list-style-type:none">
    <a href="613ba4a7-a5b0-4989-8af1-07dc8b7be7b7.xhtml">When is an immutable variable not an immutable variable?</a>
    
</li>
<li style="list-style-type:none">
    <a href="5d544534-8c84-431d-8311-99c665a58a19.xhtml">And it's obviously mutable, it has mut in the definition</a>
    
</li>
<li style="list-style-type:none">
    <a href="93574f54-7e2f-49bd-882a-d143d02c26c3.xhtml">Interior mutability</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="42e483ea-8e87-4cf7-aa2b-b00afe9ae3df.xhtml">Back to sync</a>
    
</li>
<li style="list-style-type:none">
    <a href="afbde2de-7afd-4585-b25d-196bbd3d830f.xhtml">A beginner's guide to threading in Rust</a>
    <ol><li style="list-style-type:none">
    <a href="dbdfcd39-d75a-4502-9b39-fcc44b8b3309.xhtml">An easy approach to thinking about how threads work.</a>
    
</li>
<li style="list-style-type:none">
    <a href="0173aea9-7e54-456c-8635-1d6ebde973fa.xhtml">Joining threads</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="4615be78-0cab-4d63-b466-537c13766162.xhtml">Closures</a>
    <ol><li style="list-style-type:none">
    <a href="c0676d18-839c-400e-90e6-ec90bff4efb5.xhtml">Closures aren't all they first appear to be</a>
    
</li>
<li style="list-style-type:none">
    <a href="72bc0c4c-aa34-4375-b977-e1d9372d692f.xhtml">Closures as function arguments</a>
    
</li>
<li style="list-style-type:none">
    <a href="c47c5cc0-be00-46df-bcbf-1567b0009e03.xhtml">Closures with explicit lifetimes – a special case</a>
    
</li>
<li style="list-style-type:none">
    <a href="9ad858af-333a-4dbd-8b87-97378794e8cf.xhtml">Returning a closure</a>
    
</li>
<li style="list-style-type:none">
    <a href="9e77dc34-8841-465e-b720-9d65ae06fecd.xhtml">What is the move parameter?</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="714c9a2b-53cf-4e91-9219-ce643b07959c.xhtml">Back to threading</a>
    
</li>
<li style="list-style-type:none">
    <a href="255d6534-6ef2-4530-9f7e-2ddf2736f98a.xhtml">Ownership has its advantages</a>
    <ol><li style="list-style-type:none">
    <a href="8cc23044-6907-49fa-8087-71dd9aa7917b.xhtml">The reference counter</a>
    
</li>
<li style="list-style-type:none">
    <a href="25ee29ed-d8b8-4603-a14f-03d4be8dc587.xhtml">Problem solved – use Mutex</a>
    
</li>
<li style="list-style-type:none">
    <a href="d0322c12-5d65-418e-8658-d628009a43ef.xhtml">Why do we put the thread to sleep?</a>
    
</li>
<li style="list-style-type:none">
    <a href="7fa2aedb-fce0-43c3-abaa-1579beb80a17.xhtml">Thread synchronization</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="b7f46265-4db6-477e-b4a7-e4cacdcc76d5.xhtml">Thread panics</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="6c9c50ae-6b2f-4a8c-87f5-56332bc125ef.xhtml">Summary</a>
    
</li>
</ol>
</li>
<li style="list-style-type:decimal" value="12">
    <a href="bfda4ae5-51e3-4714-95c5-75e1a44106b5.xhtml">Now It&amp;#x27;s Your Turn!</a>
    <ol><li style="list-style-type:none">
    <a href="7afaa52d-f9b8-45a4-b368-1a9bcd0187a7.xhtml">Task 1 – cleaning the code (part 1)</a>
    <ol><li style="list-style-type:none">
    <a href="0f2d3411-fd35-475f-ac60-96cef2a094ff.xhtml">The problems with each option</a>
    <ol><li style="list-style-type:none">
    <a href="0f201083-4b55-4860-9f3b-c11955bca4c6.xhtml">The String option</a>
    
</li>
<li style="list-style-type:none">
    <a href="ba608f97-b321-4a0c-a0ce-65c52b0bb853.xhtml">The struct option</a>
    
</li>
<li style="list-style-type:none">
    <a href="63cce0b1-30c3-4e7a-9036-035e1a44bf8a.xhtml">The task</a>
    
</li>
</ol>
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="b79fc971-7d1a-4a7e-bb66-2bd15df046d9.xhtml">Task 2 – cleaning the code (part 2)</a>
    <ol><li style="list-style-type:none">
    <a href="4b7914d7-fafe-4634-8d2a-eb2172b67f4b.xhtml">The task</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="4064ca7d-2998-4d36-8f27-dd4b39fb1251.xhtml">Task 3 – extending the crate (part 1)</a>
    <ol><li style="list-style-type:none">
    <a href="9f9142ba-07c3-4cd5-aa51-873efe67017c.xhtml">The task</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="eb614ded-9d1f-4300-b922-da8a400decb4.xhtml">Task 4 – extending the crate (part 2)</a>
    
</li>
<li style="list-style-type:none">
    <a href="00d174d7-9a18-4a65-addd-7eb6ed6ea8e4.xhtml">Summary</a>
    
</li>
</ol>
</li>
<li style="list-style-type:decimal" value="13">
    <a href="b22d5775-6084-4eda-af26-6dd545f50dd6.xhtml">The Standard Library</a>
    <ol><li style="list-style-type:none">
    <a href="0ddfd482-9c03-49c8-8724-7e2b69d81967.xhtml">Chapter format</a>
    
</li>
<li style="list-style-type:none">
    <a href="693c9269-ae21-4bf8-ad5d-e8d121fa95e9.xhtml">What is the standard library?</a>
    <ol><li style="list-style-type:none">
    <a href="aa603edb-9587-4f52-b442-c4d888938179.xhtml">The standard modules (overview)</a>
    
</li>
<li style="list-style-type:none">
    <a href="371a512e-840f-4a69-ba47-cf2bc3fc79b8.xhtml">Primitive types (overview)</a>
    
</li>
<li style="list-style-type:none">
    <a href="3f090a42-b0fb-4d8e-985d-a7de3cdc7fd2.xhtml">Macros (overview)</a>
    
</li>
<li style="list-style-type:none">
    <a href="13871223-f721-4c23-92e8-36ab26be06eb.xhtml">Prelude</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="930c12e5-6f8c-44aa-a688-62d916a4f357.xhtml">The standard modules</a>
    <ol><li style="list-style-type:none">
    <a href="63e7ac3d-4897-419c-a583-52eb310f5a9e.xhtml">std::Any</a>
    
</li>
<li style="list-style-type:none">
    <a href="cd01f586-1053-4386-8492-6000df031111.xhtml">std::ascii</a>
    
</li>
<li style="list-style-type:none">
    <a href="e959c8dd-f61a-45f6-85b1-ee6501e12446.xhtml">std::borrow</a>
    
</li>
<li style="list-style-type:none">
    <a href="6e493079-3506-4fb2-bc7a-891b65af853c.xhtml">std::boxed</a>
    
</li>
<li style="list-style-type:none">
    <a href="87693865-ce6b-4960-ab8b-6c99ebc548ed.xhtml">std::cell</a>
    
</li>
<li style="list-style-type:none">
    <a href="ff0d56db-6a56-4596-a99c-e1625e65cba7.xhtml">std::char</a>
    
</li>
<li style="list-style-type:none">
    <a href="7129adbf-1084-413d-bf7c-8c877cee888a.xhtml">std::clone</a>
    
</li>
<li style="list-style-type:none">
    <a href="4d860c93-0e7e-4c25-a287-79bf201f5001.xhtml">std::cmp</a>
    
</li>
<li style="list-style-type:none">
    <a href="d22c9845-1d56-43f6-9c9d-e687c6ef0627.xhtml">std::collections</a>
    
</li>
<li style="list-style-type:none">
    <a href="22e04719-c0ed-4ddb-8cac-d18d39da3eed.xhtml">std::convert</a>
    
</li>
<li style="list-style-type:none">
    <a href="72d239b3-1171-45c5-be75-8219e7e781b6.xhtml">std::default</a>
    
</li>
<li style="list-style-type:none">
    <a href="8c56ac60-06a0-4d1e-a340-8b00338c3270.xhtml">std:env</a>
    
</li>
<li style="list-style-type:none">
    <a href="6846b89c-08e4-46c2-8cd0-e70f9978ca7c.xhtml">std:error</a>
    
</li>
<li style="list-style-type:none">
    <a href="6180aa08-2a9a-4615-96e6-53a2c0c0d43d.xhtml">std::f32</a>
    
</li>
<li style="list-style-type:none">
    <a href="2b3114d7-0569-45c6-87aa-e2fe170a63bb.xhtml">std::f64</a>
    
</li>
<li style="list-style-type:none">
    <a href="d88062c8-a1fc-496e-aa41-cad1ec08132a.xhtml">std:ffi</a>
    
</li>
<li style="list-style-type:none">
    <a href="d46eabc3-935e-4574-8c19-34f48162bdc1.xhtml">std::fmt</a>
    
</li>
<li style="list-style-type:none">
    <a href="3677837c-f6c1-4802-8e63-e7675cd3bd87.xhtml">std::fs</a>
    
</li>
<li style="list-style-type:none">
    <a href="42a5f4a8-8062-4e21-82b4-b8780c993e58.xhtml">std::hash</a>
    
</li>
<li style="list-style-type:none">
    <a href="33825a50-1cef-4e97-8056-298739953097.xhtml">std::i8</a>
    
</li>
<li style="list-style-type:none">
    <a href="6af9cb73-0454-44e4-8516-32ee861d7ccf.xhtml">std::i16</a>
    
</li>
<li style="list-style-type:none">
    <a href="597acf8d-5c73-407d-b18c-70096a65319e.xhtml">std::i32</a>
    
</li>
<li style="list-style-type:none">
    <a href="e8a45183-b51c-4232-8ed0-d9fce0b35b4a.xhtml">std::i64</a>
    
</li>
<li style="list-style-type:none">
    <a href="ce159e1b-e602-4b74-979e-651ac7fc894f.xhtml">std::io</a>
    
</li>
<li style="list-style-type:none">
    <a href="4ee3d1d4-ecf8-4f34-af7c-17029c51c691.xhtml">std::isize</a>
    
</li>
<li style="list-style-type:none">
    <a href="5fae8e74-a76f-4a43-891c-1fea39e5ef9b.xhtml">std::iter</a>
    
</li>
<li style="list-style-type:none">
    <a href="325f054f-261e-40c5-a7c2-f686bed0b3ef.xhtml">std::marker</a>
    
</li>
<li style="list-style-type:none">
    <a href="e7a4adf5-711f-4bde-8e31-bb454e24f031.xhtml">std::mem</a>
    
</li>
<li style="list-style-type:none">
    <a href="d113da65-7d49-4ab7-a325-0fb66d9e6f55.xhtml">std:net</a>
    
</li>
<li style="list-style-type:none">
    <a href="e9148989-0fab-4fe6-88b8-4567bb637dcc.xhtml">std::num</a>
    
</li>
<li style="list-style-type:none">
    <a href="6173953f-56f8-43f7-85f8-7216a949517f.xhtml">std::os</a>
    
</li>
<li style="list-style-type:none">
    <a href="e6e43769-13fc-40ae-a80f-157e6273d0a3.xhtml">std::panic</a>
    
</li>
<li style="list-style-type:none">
    <a href="54948fe7-66c1-4a77-85de-329262e2d747.xhtml">std::path</a>
    
</li>
<li style="list-style-type:none">
    <a href="01221a1a-cb80-47df-9c08-ff3dd5b477e8.xhtml">std::process</a>
    
</li>
<li style="list-style-type:none">
    <a href="74cede55-0965-45b3-801b-96f7daf4860d.xhtml">std::ptr</a>
    
</li>
<li style="list-style-type:none">
    <a href="cb1812e5-ccf8-4c50-98f9-c748e4c6cab4.xhtml">std::slice</a>
    
</li>
<li style="list-style-type:none">
    <a href="52373358-7a7d-4c45-9f76-5faeb22d81bf.xhtml">std::str</a>
    
</li>
<li style="list-style-type:none">
    <a href="fbb40f8a-587b-45de-ade4-dc660eda23b6.xhtml">std::string</a>
    
</li>
<li style="list-style-type:none">
    <a href="dfde2ac5-d52f-438c-8c4f-93e6add4e313.xhtml">std::sync</a>
    
</li>
<li style="list-style-type:none">
    <a href="cd4375ce-8e5f-4e5c-8b9b-610a0478571f.xhtml">std::thread</a>
    
</li>
<li style="list-style-type:none">
    <a href="dc70f052-5d85-4c36-b447-894367cf4fa8.xhtml">std::time</a>
    
</li>
<li style="list-style-type:none">
    <a href="6167cabd-61d9-43ee-bb98-5e5481b4c2fd.xhtml">std::u8</a>
    
</li>
<li style="list-style-type:none">
    <a href="5b994f94-4954-4e1f-afef-5aad462c81be.xhtml">std::u16</a>
    
</li>
<li style="list-style-type:none">
    <a href="358b8b23-1fcb-4f50-be2c-b7d76f31c089.xhtml">std::u32</a>
    
</li>
<li style="list-style-type:none">
    <a href="19bb42e7-74e6-40ed-993f-5fc7a76b1ef9.xhtml">std::u64</a>
    
</li>
<li style="list-style-type:none">
    <a href="c050dd4b-4c7a-4fdc-97cd-e214e106e62c.xhtml">std::usize</a>
    
</li>
<li style="list-style-type:none">
    <a href="be619f48-18a7-4092-b445-9caef93c872a.xhtml">std::vec</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="8e58c3e5-5ea5-4e33-bea3-22bb50ebf020.xhtml">Summary</a>
    
</li>
</ol>
</li>
<li style="list-style-type:decimal" value="14">
    <a href="6392ba81-7725-47e5-a5ce-ce2f7384a1d5.xhtml">Foreign Function Interfaces</a>
    <ol><li style="list-style-type:none">
    <a href="9cf9c6db-3a63-4897-b44a-770d9dc17d99.xhtml">Introducing our simple library</a>
    
</li>
<li style="list-style-type:none">
    <a href="dbf8b332-110f-46a0-97fb-3d9cf6e425ce.xhtml">The three-step program</a>
    <ol><li style="list-style-type:none">
    <a href="13d2864d-2e77-4837-a110-07d5a7344479.xhtml">Including the dependency</a>
    
</li>
<li style="list-style-type:none">
    <a href="2eb57879-5363-4ff1-8abd-e73667c01ed5.xhtml">Creating the code</a>
    <ol><li style="list-style-type:none">
    <a href="255da333-942d-46bf-9f52-226779f03fa4.xhtml">What's the [link(name="")] for?</a>
    
</li>
<li style="list-style-type:none">
    <a href="0b70ecc1-d68e-41d7-88e1-d75c3e3a62f1.xhtml">What's the big deal? That was simple enough!</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="37223ac6-c9b3-4d1b-8d2a-df8116fc6122.xhtml">Let's extend things a bit</a>
    <ol><li style="list-style-type:none">
    <a href="bc42ac79-3343-4c9c-9071-63fe91cbd59b.xhtml">What happens if the types don't match?</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="88352cf3-c160-4ae3-9500-fe9ad8978a8f.xhtml">Can we make things safer?</a>
    <ol><li style="list-style-type:none">
    <a href="139d1bcd-745c-438e-a963-80139fb90c08.xhtml">Wrappers</a>
    
</li>
<li style="list-style-type:none">
    <a href="a807c514-371d-4962-9af8-21a2c95a5b8e.xhtml">A practical example</a>
    
</li>
<li style="list-style-type:none">
    <a href="aacf1e14-7854-4914-aa9f-cf2ac03a2c50.xhtml">Accessing global variables</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="12659b4d-b816-4d74-a2e5-d905a047c76c.xhtml">Cleaning up after yourself</a>
    <ol><li style="list-style-type:none">
    <a href="04bbf961-6fbe-4750-bb10-7b6b4b3559b2.xhtml">Drop it!</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="3f641a7e-1425-4133-8ced-cf50f34a7100.xhtml">Monitoring an external process within an FFI</a>
    <ol><li style="list-style-type:none">
    <a href="78d987c8-2c26-4c24-a727-96a78f135981.xhtml">Targeting synchronous callbacks</a>
    
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="88714dae-2fe3-42f5-847b-4f1575bcf5b9.xhtml">Targeting a Rust object</a>
    
</li>
<li style="list-style-type:none">
    <a href="338d5191-0bb4-4d32-9563-35b65b8bb0bd.xhtml">Calling Rust from another language</a>
    
</li>
<li style="list-style-type:none">
    <a href="7e1b6bc0-8549-4b35-9dea-146a51097668.xhtml">Dealing with the unknown</a>
    <ol><li style="list-style-type:none">
    <a href="73d96d88-3440-47d8-9a68-5ee990decd98.xhtml">C structs</a>
    
</li>
</ol>
</li>
</ol>
</li>
<li style="list-style-type:none">
    <a href="0308ff70-f85f-4dc3-b67e-9d446ecc6018.xhtml">Summary</a>
    
</li>
</ol>
</li>
</ol>
                </nav>
            </article>

            <footer style="margin-top: 5em;"/>
        </section>
    </div></body>
</html>