<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">External dependencies</h1>
                </header>
            
            <article>
                
<p>Normally, if a dependency is outside the application, we would add something like this to the <kbd>Cargo.toml</kbd> file:</p>
<pre>[dependencies] 
mathslib = "0.1.0" </pre>
<p>In this case, we're not able to use cargo to make the build; instead, we need to compile using <kbd>rustc</kbd>. The way cargo works is it recompiles the dependencies for each project (there is no guarantee that each project will use the same set of features for a given crate).</p>
<p>We can simulate a cargo run with the following command:</p>
<pre><strong>rustc -L . src/main.rs &amp;&amp; ./main</strong> </pre>
<p>The <kbd>-L</kbd> links any libraries in <kbd>.</kbd> (the root directory, where you find <kbd>Cargo.toml</kbd>) to the sources after the <kbd>.</kbd> . The <kbd>/main</kbd> part essentially tells the command-line interpreter to execute the binary called <kbd>./main</kbd> in the root directory (the name comes from the file compiled).</p>
<p>Once we have executed this, we can see our application in all its glory:</p>
<div class="CDPAlignCenter CDPAlign"><img src="Images/8ab84f1c-d647-4b9f-ad89-184c76bb5e61.png" width="1140" height="166"/></div>
<div class="CDPAlignCenter CDPAlign packt_figref">Figure 8</div>
<p>We now know that our crate (as-is) is running as it should do.</p>


            </article>

            
        </section>
    </div></body>
</html>