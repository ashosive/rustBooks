<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Introducing Generics, Impl, and Traits</h1>
                </header>
            
            <article>
                
<p>One of the key benefits of any modern language is the ability to be able to use a type which can be anything. Not only does this reduce the amount of code required, but it allows for greater flexibility in code creation. Rust not only allows for generic types and functions, but introduces traits; these can be considered as a logical extension of generics, as they tell the compiler the functionality the type must provide.</p>
<p>In this chapter, we will take a look at the following topics:</p>
<ul>
<li>Generics in Rust</li>
<li>Impl and traits</li>
<li>Generic types</li>
<li>Trait objects</li>
</ul>


            </article>

            
        </section>
    </div></body>
</html>