<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Creating a vector via an iterator</h1>
                </header>
            
            <article>
                
<p>Another way to create a vector is via an iterator. This is achieved via the <kbd>collect()</kbd> method:</p>
<pre>let my_vec: Vec&lt;u64&gt; = (0..10).collect(); </pre>
<div class="packt_infobox">The format for the iterator is very convenient. Instead of the likes of <kbd>let foo = {0,1,2,3};</kbd>, this is shortened to use <kbd>..</kbd>, which means all numbers between <em>a</em> and <em>b</em> (<em>b</em> being excluded - so <kbd>0 .. 10</kbd> creates a vector containing 0,1,2,3,4,5,6,7,8,9). This can be seen in the source example supplied with this book.</div>


            </article>

            
        </section>
    </div></body>
</html>