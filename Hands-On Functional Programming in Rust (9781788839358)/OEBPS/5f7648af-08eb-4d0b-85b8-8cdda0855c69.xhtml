<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Authorizing sessions</h1>
                </header>
            
            <article>
                
<p>To authorize a session, there are three steps:</p>
<ol>
<li>Authorize the session</li>
<li>Poll and retrieve the session object</li>
<li>Check for errors</li>
</ol>
<p>The results of these functions areÂ <kbd>Result</kbd> objects, which will be a common pattern in this library:</p>
<pre>pub fn authorize_override() -&gt; Result&lt;AuthorizedSession,ErrorCode&gt;<br/>{<br/>   let session = unsafe {<br/>      magic::issue_override_code(OverrideCode::IssueOverride as i32);<br/>      magic::poll_override_session()<br/>   };<br/>   let session = AuthorizedSession {<br/>      session: session<br/>   };<br/>   check_error(session)<br/>}<br/><br/>pub fn authorize_privileged() -&gt; Result&lt;AuthorizedSession,ErrorCode&gt;<br/>{ ... }<br/><br/>pub fn authorize_admin() -&gt; Result&lt;AuthorizedSession,ErrorCode&gt;<br/>{ ... }</pre>


            </article>

            
        </section>
    </div></body>
</html>