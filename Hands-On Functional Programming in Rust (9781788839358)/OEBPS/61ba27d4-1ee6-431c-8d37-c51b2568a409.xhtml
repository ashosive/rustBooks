<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Defining the ErrorCode enum</h1>
                </header>
            
            <article>
                
<p>Similar to <kbd>OverrideCode</kbd>, the <kbd>ErrorCode</kbd> enum defines typesafe labels for each of the library error codes. There is also a helper function to cast integers into the enum type:</p>
<pre>pub enum ErrorCode {<br/>   DoubleAuthorize = 1,<br/>   DoubleFree = 2,<br/>   AccessDenied = 3,<br/>}<br/><br/>pub fn toErrorCode(i: i32) -&gt; ErrorCode {<br/>   match i {<br/>      1 =&gt; ErrorCode::DoubleAuthorize,<br/>      2 =&gt; ErrorCode::DoubleFree,<br/>      3 =&gt; ErrorCode::AccessDenied,<br/>      _ =&gt; panic!("Unexpected error code: {}", i)<br/>   }<br/>}</pre>


            </article>

            
        </section>
    </div></body>
</html>