<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Capping the Big O</h1>
                </header>
            
            <article>
                
<p>Big <em>O</em> notation is a computer science term used to group functions with respect to how fast they grow as the input value gets larger. This term is most often used with respect to algorithm runtime or space requirement.</p>
<p>When using this term in software engineering, we are usually concerned with one of these four cases:</p>
<ul>
<li>Constant</li>
<li>Logarithmic growth</li>
<li>Polynomial growth</li>
<li>Exponential growth</li>
</ul>
<p>When we are concerned with application performance, it is good to consider the Big <em>O</em> efficiency of the logic you are using. Depending on which of the preceding four cases you are dealing with, the appropriate response to optimization strategies may change.</p>


            </article>

            
        </section>
    </div></body>
</html>