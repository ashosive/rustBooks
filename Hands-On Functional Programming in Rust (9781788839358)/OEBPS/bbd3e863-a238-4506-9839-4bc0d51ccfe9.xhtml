<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Defining lifetimes on generic types</h1>
                </header>
            
            <article>
                
<p>Declaring lifetimes on generic types requires one additional consideration. All generic types that have a specified lifetime must be parameterized as having that lifetime. The parameter declaration must be compatible with how the parameter is used.</p>
<p>Here is an example that will fail:</p>
<pre style="padding-left: 30px"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Ref</span></span><span>&lt;</span><span class="hljs-symbol">'a</span><span>, T&gt;(&amp;</span><span class="hljs-symbol">'a</span> <span>T);</span></pre>
<p>The struct definition uses the parameter <kbd>T</kbd> having a lifetime of <kbd>'a</kbd>; however, the parameter <kbd>T</kbd> is not required to have a lifetime compatible with <kbd>'a</kbd>.  The parameter <kbd>T</kbd> must be constrained by its own lifetime. By doing this, the code becomes as follows:</p>
<pre style="padding-left: 30px"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Ref</span></span><span>&lt;</span><span class="hljs-symbol">'a</span><span>, T: </span><span class="hljs-symbol">'a</span><span>&gt;(&amp;</span><span class="hljs-symbol">'a</span><span> T);</span></pre>
<p>Now that the parameter <kbd>T</kbd> has an explicit bound compatible with <kbd>'a</kbd>, the code will compile.</p>


            </article>

            
        </section>
    </div></body>
</html>