<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Functional Programming – a Comparison</h1>
                </header>
            
            <article>
                
<p class="p1"><span class="s1"><strong>Functional programm</strong><strong>ing</strong> (<strong>FP</strong>) is the second most popular programming paradigm, behind only <strong>obje</strong><strong>ct-oriented programming</strong> (<strong>OOP</strong>). For many years, these two paradigms have been separated into different languages, so as not to be mixed. <span><span>M</span></span>ulti-paradigm languages have attempted to support both approaches. Rust is one such language.</span></p>
<p class="p1"><span class="s1">As a broad definition, functional programming emphasizes the use of composable and maximally reusable functions to define program behavior. Using these techniques, we will show how functional programming has adapted clever solutions to many common yet difficult problems. This chapter will outline most of the concepts presented in this book. The remaining chapters will be dedicated to helping you master each technique.</span></p>
<p>The learning outcomes we hope to provide are as follows:</p>
<ul>
<li>Being able to use functional style to reduce code weight and complexity</li>
<li>Being able to write robust safe code by utilizing safe abstractions</li>
<li>Being able to engineer complex projects using functional principles</li>
</ul>


            </article>

            
        </section>
    </div></body>
</html>