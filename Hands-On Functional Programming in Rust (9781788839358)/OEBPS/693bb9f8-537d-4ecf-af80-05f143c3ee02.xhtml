<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Implementing Concurrency</h1>
                </header>
            
            <article>
                
<ol>
<li>What is a subprocess?</li>
</ol>
<p style="padding-left: 60px">A subprocess is a child process started by a parent process. The child process must remain under the parent process to continue to be called a <strong>subprocess</strong>.</p>
<ol start="2">
<li>Why is fork called fork?</li>
</ol>
<p style="padding-left: 60px">fork means a split (process), like a fork in the road, or a forked tongue.</p>
<ol start="3">
<li>Is fork still useful?</li>
</ol>
<p style="padding-left: 60px">Yes! If you have access to it on your system. For example, the heartbeat pattern is much more elegant with fork.</p>
<ol start="4">
<li>When were threads standardized?</li>
</ol>
<p style="padding-left: 60px">Threads have never been universally standardized. The Posix standard introduced threads in 1995. Notably, Windows provides no standard or guarantees regarding thread behavior. There are similarities, but no standard.</p>
<div>
<div>
<div>
<ol start="5">
<li>Why is move sometimes needed for thread closures?</li>
</ol>
<p style="padding-left: 60px">Move tells the compiler that it is OK to transfer ownership of captured variables to the closure.</p>
<ol start="6">
<li>What is the difference between <kbd>Send</kbd> and <kbd>Sync</kbd> traits?</li>
</ol>
<p style="padding-left: 60px"><kbd>Sync</kbd> is a stronger assertion of thread-safety—a type is <kbd>Send</kbd> if it is safe to send it to another thread. A type is <kbd>Sync</kbd> if it is safe to share between threads.</p>
<ol start="7">
<li>What are we allowed to lock, then mutate Mutex without an unsafe block?</li>
</ol>
<p style="padding-left: 60px">The compiler has determined that Mutex is already safe to use and meets certain requirements for safety. That is not to say that bad things can't happen—a Mutex will poison itself if one of its <kbd>MutexGuards</kbd> (the thing it returns when a lock is obtained) is dropped during a panic. Any future attempts to lock the Mutex will return an <kbd>Err</kbd> or <kbd>panic!</kbd>.</p>
</div>
</div>
</div>


            </article>

            
        </section>
    </div></body>
</html>