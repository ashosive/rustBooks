<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Implementing the Drop trait</h1>
                </header>
            
            <article>
                
<p>The following code snippet in which the <kbd>Drop</kbd> trait is implemented for a struct clearly shows the moment when the value <kbd>block</kbd> is freed:</p>
<pre>// see code in Chapter 7/code/drop.rs 
struct Block { 
    number: i32 
} 
 
impl Drop for Block { 
    fn drop(&amp;mut self) { 
        println!("Dropping!"); 
    } 
} 
 
fn print_block(block: Block) { 
    println!("In function print_block"); 
} 
 
fn main() { 
    let block = Block{ number: 1 }; 
    // move of value block: 
    print_block(block); 
    println!("Back in main!"); 
}</pre>
<p>This prints out the following output:</p>
<pre><strong>In function print_block</strong><strong>Dropping!</strong><strong>Back in main!</strong></pre>
<p>So the <kbd>block</kbd> reference is freed at the end of the <kbd>print_block</kbd> function.</p>


            </article>

            
        </section>
    </div></body>
</html>