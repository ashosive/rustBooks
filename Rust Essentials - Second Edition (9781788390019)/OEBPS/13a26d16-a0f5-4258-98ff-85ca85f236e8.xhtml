<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Moving a value</h1>
                </header>
            
            <article>
                
<p>The owner can move the ownership of the object to another variable like this:</p>
<pre>let kl2 = klaatu; </pre>
<p>Here the <em>ownership has moved</em> from <kbd>klaatu</kbd> to <kbd>kl2</kbd>, but no data is actually copied. The original owner <kbd>klaatu</kbd> cannot be used anymore:</p>
<pre>println!("{}", klaatu.planet); </pre>
<p>The compiler gives the following error:</p>
<pre>    <strong>error: use of moved value 'klaatu.planet'.</strong>  </pre>
<p>The same thing happens if, after the assignment to <kbd>kl2</kbd>, we pass <kbd>klaatu</kbd> as a parameter to a function <kbd>transform</kbd>:</p>
<pre>let kl2 = transform(klaatu); 
fn transform(a: Alien) -&gt; Alien { 
   Alien { planet:"Jupiter".to_string(), n_tentacles:0 } 
} </pre>
<p>This gives the following error:</p>
<pre>    <strong>error: use of moved value: `klaatu`</strong>  </pre>
<p>The <kbd>use of moved value</kbd> error goes away if we assign the return value of the function to <kbd>klaatu</kbd> itself:</p>
<pre>   let klaatu = transform(klaatu); 
   println!("{}", klaatu.planet); // Jupiter </pre>
<p>But this is not a very elegant solution.</p>


            </article>

            
        </section>
    </div></body>
</html>