<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Organizing Code and Macros</h1>
                </header>
            
            <article>
                
<p>This chapter starts with discussing the large-scale code-organizing structures in Rust, namely modules and crates. ;After working through the material, you'll understand the structure of Rust projects, and be able to build a structured app as well. More specifically, we look at the following topics:</p>
<ul>
<li>Building crates</li>
<li>Defining a module</li>
<li>Visibility of items</li>
<li>Importing modules and file hierarchy</li>
<li>Importing external crates</li>
<li>Exporting a public interface</li>
<li>Adding external crates to a project</li>
<li>Working with random numbers</li>
</ul>
<p>We will touch upon how to build macros in order to generate code and save time and effort, particularly in these topics:</p>
<ul>
<li>Why macros?</li>
<li>Developing macros</li>
<li>Using macros from crates</li>
<li>Some other built-in macros</li>
</ul>


            </article>

            
        </section>
    </div></body>
</html>