<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Modules and crates</h1>
                </header>
            
            <article>
                
<p>Until now, we only looked at a situation where our code fitted in one file. But when a project evolves, we will want to split the code into several files, for example, by putting all data structures and methods that describe certain functionality in the same file. How will the main code file be able to call these functions in other files?</p>
<p>Also, when we start getting multiple functions in various files, it sometimes happens that we want to use the same name for two different functions. How can we properly differentiate between such functions, and how can we make it so that some functions are callable everywhere, and others are not? For this, we need what other languages call namespaces and access modifiers; in Rust this is done through the <em>module system</em>.</p>


            </article>

            
        </section>
    </div></body>
</html>