<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Some other built-in macros</h1>
                </header>
            
            <article>
                
<p>The <kbd>write!</kbd> macro allows you to write values into any kind of buffer, optionally using the same formatting capabilities as <kbd>format!</kbd> and <kbd>println!</kbd>. In the following example, we simply write a string to a vector:</p>
<pre>// from Chapter 8/code/write.rs 
// in order to be able to use write! on a vector 
use std::io::Write;  
 
fn main() { 
    let mut vec1 = Vec::new(); 
    write!(&amp;mut vec1, "test"); 
    println!("{:?}", vec1); 
} </pre>
<p>This prints out the following:</p>
<pre><strong>[116, 101, 115, 116].</strong>  </pre>
<p>A handy macro during development is <kbd>unimplemented!</kbd>, which you might have already seen in generated code. You can also use it yourself as a temporary placeholder for a function body you will write later:</p>
<pre>   // from Chapter 8/code/unimplemented.rs 
      fn main() { 
          unimplemented!(); 
      } </pre>
<p>It will compile just fine, but when executed it will panic:</p>
<pre><strong>thread 'main' panicked at 'not yet implemented'</strong>  </pre>
<p>This indicates the code line where it found the macro. That way you won't forget to write the code!</p>
<p>A similar macro is called <kbd>unreachable!</kbd> Put this in a code location that you think will never be executed, like in the following if statement:</p>
<pre>   // from Chapter 8/code/unreachable.rs 
   fn main() { 
       if false { 
           unreachable!(); 
       } 
       unreachable!(); 
   } </pre>
<p>But if it does execute, it gives you a panic to indicate that code line was nevertheless reached:</p>
<pre><strong>thread 'main' panicked at 'internal error: entered unreachable code'.</strong>  </pre>


            </article>

            
        </section>
    </div></body>
</html>