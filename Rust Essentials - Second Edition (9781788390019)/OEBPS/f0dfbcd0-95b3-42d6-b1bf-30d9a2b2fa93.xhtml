<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}#sbo-rt-content *{word-wrap:break-word!important;word-break:break-word!important;}#sbo-rt-content table,#sbo-rt-content pre{overflow-x:unset!important;overflow:unset!important;overflow-y:unset!important;white-space:pre-wrap!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Where to use Rust</h1>
                </header>
            
            <article>
                
<p>It is clear from the previous sections that Rust can be used in projects that would normally use C or C++. Indeed, many regard Rust as a successor to, or a replacement for, C/C++. Although Rust is designed to be a systems language, due to its richness of constructs, it has a broad range of possible applications, making it an ideal candidate for applications that fall into one or all of the following categories:</p>
<ul>
<li>Client applications, like browsers</li>
<li>Low-latency, high-performance systems, like device drivers, games and signal processing</li>
<li>Highly distributed and concurrent systems, like server applications and microservices</li>
<li>Real-time and critical systems, like operating systems or kernels</li>
<li>Embedded systems (requiring a very minimal runtime footprint) or resource-constrained environments, like Raspberry Pi and Arduino, or robotics</li>
<li>Tools or services that can't support the long warmup delays common in <strong>just-in-time</strong> (<strong>JIT</strong>) compiler systems and need instantaneous startup</li>
<li>Web frameworks</li>
<li>Large-scale, high-performance, resource intensive, and complex software systems</li>
</ul>
<p>Rust is especially suitable when code quality is important, that is, for the following:</p>
<ul>
<li>Modestly-sized or larger development teams</li>
<li>Code for long-running production use</li>
<li>Code with a longer lifetime that requires regular maintenance and refactoring</li>
<li>Code for which you would normally write a lot of unit tests to safeguard</li>
</ul>


            </article>

            
        </section>
    </div></body>
</html>